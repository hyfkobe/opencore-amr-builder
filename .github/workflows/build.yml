name: Build opencore-amr for all platforms

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake libtool

      - name: Clone opencore-amr
        run: |
          git clone git@github.com:mstorsjo/opencore-amr.git
          cd opencore-amr && ./autogen.sh && ./configure --enable-static --disable-shared
          make -j$(nproc)
          mkdir -p ../artifacts/linux
          cp .libs/libopencore-amrnb.a ../artifacts/linux/
          cp -r include ../artifacts/linux/

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install MSYS2 and dependencies
        uses: msys2/setup-msys2@v2
        with:
          install: >-
            base-devel
            mingw-w64-x86_64-toolchain

      - name: Build opencore-amr
        shell: msys2 {0}
        run: |
          pacman -S --noconfirm git autoconf automake libtool
          git clone git@github.com:mstorsjo/opencore-amr.git
          cd opencore-amr
          ./autogen.sh
          ./configure --host=mingw32 --enable-static --disable-shared
          make -j$(nproc)
          mkdir -p ../artifacts/windows
          cp .libs/libopencore-amrnb.a ../artifacts/windows/
          cp -r include ../artifacts/windows/

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install dependencies
        run: brew install autoconf automake libtool

      - name: Build opencore-amr
        run: |
          git clone git@github.com:mstorsjo/opencore-amr.git
          cd opencore-amr
          ./autogen.sh
          ./configure --enable-static --disable-shared
          make -j$(sysctl -n hw.logicalcpu)
          mkdir -p ../artifacts/macos
          cp .libs/libopencore-amrnb.a ../artifacts/macos/
          cp -r include ../artifacts/macos/

  upload:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Upload compiled artifacts
        uses: actions/upload-artifact@v3
        with:
          name: opencore-amr-libs
          path: artifacts/
